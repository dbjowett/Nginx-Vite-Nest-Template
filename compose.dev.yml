services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: postgres://postgres:postgres@database:5432/postgres-dev?schema=SCHEMA
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
    networks:
      - app-network

  db:
    image: postgres
    container_name: database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres-dev
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgres/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  frontend-volume:
    name: frontend-volume

networks:
  app-network:
